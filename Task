class Account:

    def __init__(self,account_number, account_holder,initial_balance=0):

        self.account_number=account_number

        self.account_holder=account_holder

        self.balance=initial_balance

        self.transactions=[]

    def get_account_details(self):

        return {

            "Account Number": self.account_number,

            "Account Holder name": self.account_holder,

            "Balance": self.balance

        }

    def print_transaction(self):

        for transaction in self.transactions:

            print(transaction)

    def deposit(self,amount):

        self.balance += amount

        self.transactions.append(f"Deposited : {amount}")

    def withdraw(self,amount):

        if amount>self.balance:

            print("Insufficient funds")

            return False

        self.balance -=amount

        self.transactions.append(f"Withdrew: {amount}")

        return True

class Bank:

    def __init__(self):

        self.accounts={}

    def create_account(self,account_number,account_holder,initial_balance=0):

        if account_number in self.accounts:

            print("Account already exists!")

            return

        new_account=Account(account_number,account_holder,initial_balance)

        self.accounts[account_number]=new_account

        print("Account created successfully")

    def account_details(self,account_number):

        account=self.accounts.get(account_number)

        if account:

            details = account.get_account_details()

            for key,value in details.items():

                print(f"{key} : {value}")

        else:

            print("Account not found!")

    def fund_transfer(self,from_account_number,to_account_number,amount):

        from_account=self.accounts.get(from_account_number)

        to_account=self.accounts.get(to_account_number)

        if to_account and from_account:

            if(from_account.withdraw(amount)):

                to_account.deposit(amount)

                print("Transfer successful")

            else:

                print("Transfer failed due to insufficient funds")

        else:

            print("One or more accounts are not found")

    def print_transaction(self,account_number):

        account=self.accounts.get(account_number)

        if(account):

            account.print_transactions()

        else:

            print("Account not found")

    def withdraw(self,account_number,amount):

        account=self.accountsget(account_number)

        if account:

            if account.withdraw(amount):

                print("Withdrawal successful")

            else:

                print("Withdraw unsuccessful due to insufficient funds")

        else:

            print("Account not found")
